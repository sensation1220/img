# Cursor Rules for Blog Project

## 🚫 CRITICAL: DO NOT CHANGE USER'S EXPLICIT SETTINGS

### 1. モデル名・API設定の尊重
- ユーザーが設定したモデル名（例：o4-mini,）を勝手に"正しい"名前に変更しない
- APIパラメータ（temperature, max_tokens等）をユーザーが削除した場合、勝手に追加しない
- API設定方式が既に決まっている場合、勝手に変更しない

### 2. ファイルパス・ディレクトリ構造の尊重
- ユーザーが明示したファイルの場所（例：ルートディレクトリの.env）を勝手に変更しない
- 既存のディレクトリ構造を勝手に変更しない
- import文やファイル読み込みパスをユーザーの意図なく変更しない

### 3. コード変更の原則
- ユーザーが明示的に設定した値を「間違い」と判断して勝手に修正しない
- "正しい"設定への"修正"と称して勝手な変更をしない
- ユーザーが削除したコード行を勝手に復活させない

### 4. 🔧 実行環境に関する変更時の確認義務（確認が必要）
以下の項目を変更する場合のみ、事前にユーザー確認が必要：

**API・認証関連：**
- モデル名の変更（gpt-4, o4-mini, claude等）
- API設定方式の変更（環境変数、.env読み込み方法等）
- 認証方法の変更（APIキー設定方法等）

**ファイル・パス関連：**
- .envファイルの場所や読み込み方法
- 設定ファイル（config, .json等）の場所
- スクリプトの実行ディレクトリ

**環境・依存関係：**
- 新しいライブラリの追加やインストール
- Python環境やバージョン指定
- 実行コマンドの変更

### 5. ✅ 自由に変更可能な項目（確認不要）
以下は積極的に改善・修正してOK：

**ロジック・アルゴリズム：**
- プログラムのロジック改善
- バグ修正
- パフォーマンス最適化
- エラーハンドリング強化

**UI・UX・表示：**
- 出力フォーマットの改善
- ログメッセージの改善
- プログレス表示の追加

**機能追加・拡張：**
- 新機能の追加
- 既存機能の拡張
- コードの構造改善

## 🎯 このプロジェクトの特徴

- ブログ生成の自動化プロジェクト
- 複数のAPI（OpenAI等）を使用
- 既存の設定ファイルやディレクトリ構造が確立済み
- ユーザーの実行環境設定には理由がある（テスト環境、特定の要件等）

## 💡 覚えておくべきこと

**実行環境について：**
「ユーザーの環境設定には必ず理由がある」
「環境に関する"修正"は必ず確認する」
「動いている環境を勝手に変更しない」

**機能改善について：**
「ロジックやUI改善は積極的に行う」
「バグ修正やパフォーマンス向上は確認不要」
「ユーザー体験を向上させる変更は歓迎」

## 🚀 推奨される開発姿勢

- **環境**: 慎重に、確認してから変更
- **機能**: 積極的に、どんどん改善
- **エラー時**: 環境を変えずに、ロジックで解決 
